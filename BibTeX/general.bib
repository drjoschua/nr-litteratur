% Encoding: UTF-8

@Book{lowman1988the,
  author    = {Lowman Jr, Paul D.},
  publisher = {Geological Society of America},
  title     = {The abstract rescrutinized},
  year      = {1988},
  isbn      = {1943-2682},
  abstract  = {This paper presents three suggestions for better scientific abstracts: begin the abstract by briefly describing the nature of the paper (new data, review, critique, etc.); write the abstract not as an introduction to the paper but as a tersely styled summary of its essential information; and include as much specific information (locations, compositions, temperatures, etc.) as possible. Write the abstract after finishing the paper, to avoid the common fault of abstract that are good introductions but poor summaries.},
  file      = {:landes1951a.pdf:PDF},
}

@Article{landes1951a,
  author   = {Landes, Kenneth K.},
  journal  = {AAPG Bulletin},
  title    = {A scrutiny of the abstract},
  year     = {1951},
  issn     = {1558-9153},
  note     = {Publisher: American Association of Petroleum Geologists (AAPG)},
  number   = {7},
  pages    = {1660--1660},
  volume   = {35},
  abstract = {The abstract is of utmost importance, for it is read by 10 to 500 times more people than hear or read the entire article. It should not be a mere recital of the subjects covered, replete with such expressions as "is discussed" and "is described". It should be a condensation and concentration of the essential qualities of the paper.},
  file     = {:landes1951a.pdf:PDF},
}

@Article{claerbout1991scrutiny,
  author    = {Claerbout, Jon F.},
  journal   = {The Leading Edge},
  title     = {A scrutiny of the introduction},
  year      = {1991},
  issn      = {1938-3789},
  number    = {1},
  pages     = {39--41},
  volume    = {10},
  abstract  = {The introduction to a technical paper should be an invitation to readers to invest their time reading it. Typically this invitation has three parts (1) the review, (2) the claim, and (3) the agenda. The claim is where the author should say why the paper's agenda is a worthwhile extension of its historical review. Personal pronouns should be used in the claim and anywhere else the author expresses judgement, opinion, or choice.},
  doi       = {ttp://dx.doi.org/10.1190/1.1436777},
  file      = {:claerbout1991a.pdf:PDF},
  publisher = {Society of Exploration Geophysicists},
}

@Article{keshav2007read,
  author    = {Keshav, Srinivasan},
  journal   = {ACM SIGCOMM Computer Communication Review},
  title     = {How to read a paper},
  year      = {2007},
  number    = {3},
  pages     = {83--84},
  volume    = {37},
  file      = {:keshav2008how.pdf:PDF},
  publisher = {ACM New York, NY, USA},
}

@Article{hannay2007asystematic,
  author   = {Hannay, Jo E. and Sjoberg, Dag I.K. and Dyba, Tore},
  journal  = {IEEE Transactions on Software Engineering},
  title    = {A {Systematic} {Review} of {Theory} {Use} in {Software} {Engineering} {Experiments}},
  year     = {2007},
  issn     = {1939-3520},
  month    = feb,
  number   = {2},
  pages    = {87--107},
  volume   = {33},
  abstract = {Empirically based theories are generally perceived as foundational to science. However, in many disciplines, the nature, role and even the necessity of theories remain matters for debate, particularly in young or practical disciplines such as software engineering. This article reports a systematic review of the explicit use of theory in a comprehensive set of 103 articles reporting experiments, from of a total of 5,453 articles published in major software engineering journals and conferences in the decade 1993-2002. Of the 103 articles, 24 use a total of 40 theories in various ways to explain the cause-effect relationship(s) under investigation. The majority of these use theory in the experimental design to justify research questions and hypotheses, some use theory to provide post hoc explanations of their results, and a few test or modify theory. A third of the theories are proposed by authors of the reviewed articles. The interdisciplinary nature of the theories used is greater than that of research in software engineering in general. We found that theory use and awareness of theoretical issues are present, but that theory-driven research is, as yet, not a major issue in empirical software engineering. Several articles comment explicitly on the lack of relevant theory. We call for an increased awareness of the potential benefits of involving theory, when feasible. To support software engineering researchers who wish to use theory, we show which of the reviewed articles on which topics use which theories for what purposes, as well as details of the theories' characteristics},
  comment  = {Example for litterature review.},
  doi      = {10.1109/TSE.2007.12},
  file     = {:hannay2007asystematic.pdf:PDF},
  keywords = {software engineering, software engineering, cause-effect relationship, Software engineering, Design for experiments, Testing, Computer industry, Programming, Theory, experiments, research methodology, empirical software engineering.},
}

@Comment{jabref-meta: databaseType:bibtex;}
